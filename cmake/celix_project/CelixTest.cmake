# Boost Software License - Version 1.0 - August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

option(CELIX_GEN_XML_TEST_REPORTS "Generate xml test reports when running tests" FALSE)

#[[
]]
function(add_celix_test)
    set(OPTIONS )
    set(ONE_VAL_ARGS NAME)
    set(MULTI_VAL_ARGS COMMAND)
    cmake_parse_arguments(CELIX_TEST "${OPTIONS}" "${ONE_VAL_ARGS}" "${MULTI_VAL_ARGS}" ${ARGN})
    set(COMMAND_ARG "")

    set(COMMAND_ARG ${CELIX_TEST_COMMAND})

    list(LENGTH CELIX_TEST_COMMAND CELIX_TEST_COMMAND_LEN)
    if (CELIX_TEST_COMMAND_LEN EQUAL 1)
        list(GET CELIX_TEST_COMMAND 0 CMD_FIRST_ELEMENT)
        if (TARGET ${CMD_FIRST_ELEMENT})
            message(STATUS "Adding --gtest_output to target ${CMD_FIRST_ELEMENT}")
            add_test(NAME ${CELIX_TEST_NAME} COMMAND ${CMD_FIRST_ELEMENT} --gtest_output=xml:${CMAKE_BINARY_DIR}/test_reports/ ${CELIX_TEST_UNPARSED_ARGUMENTS})
            return()
        endif ()

    endif ()

    add_test(NAME ${CELIX_TEST_NAME} COMMAND ${COMMAND_ARG} ${CELIX_TEST_UNPARSED_ARGUMENTS})
endfunction()
